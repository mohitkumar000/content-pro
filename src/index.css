@tailwind base;
@tailwind components;
@tailwind utilities;

/* ================================
   Design System (HSL Colors Only)
================================ */
@layer base {
  :root {
    /* Base Colors */
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;

    --card: 0 0% 0%;
    --card-foreground: 0 0% 100%;

    --popover: 0 0% 0%;
    --popover-foreground: 0 0% 100%;

    --primary: 0 0% 100%;
    --primary-foreground: 0 0% 0%;

    --secondary: 0 0% 8%;
    --secondary-foreground: 0 0% 100%;

    --muted: 0 0% 12%;
    --muted-foreground: 0 0% 65%;

    --accent: 0 0% 100%;
    --accent-foreground: 0 0% 0%;

    --destructive: 0 62% 35%;
    --destructive-foreground: 0 0% 100%;

    --border: 0 0% 20%;
    --input: 0 0% 15%;
    --ring: 0 0% 100%;

    /* Gradients */
    --gradient-primary: linear-gradient(
      135deg,
      hsl(0 0% 100% / 0.85),
      hsl(0 0% 80% / 0.6)
    );
    --gradient-secondary: linear-gradient(
      135deg,
      hsl(0 0% 90% / 0.5),
      hsl(0 0% 100% / 0.7)
    );
    --gradient-hero: linear-gradient(
      135deg,
      hsl(0 0% 100% / 0.7),
      hsl(0 0% 90% / 0.4),
      hsl(0 0% 100% / 0.7)
    );
    --gradient-card: linear-gradient(
      145deg,
      hsl(0 0% 100% / 0.05),
      hsl(0 0% 100% / 0.1)
    );
    --gradient-surface: linear-gradient(145deg, hsl(0 0% 0%), hsl(0 0% 3%));

    /* Shadows */
    --shadow-glow: 0 0 25px hsl(0 0% 100% / 0.15);
    --shadow-card: 0 4px 20px -4px hsl(0 0% 0% / 0.5);
    --shadow-elevated: 0 8px 30px -8px hsl(0 0% 0% / 0.6);

    /* Transitions & Radius */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.4s cubic-bezier(0.68, -0.55, 0.265, 1.55);
    --radius: 0.75rem;

    /* Sidebar */
    --sidebar-background: 0 0% 5%;
    --sidebar-foreground: 0 0% 100%;
    --sidebar-primary: 0 0% 100%;
    --sidebar-primary-foreground: 0 0% 0%;
    --sidebar-accent: 0 0% 10%;
    --sidebar-accent-foreground: 0 0% 100%;
    --sidebar-border: 0 0% 20%;
    --sidebar-ring: 0 0% 100%;
  }

  .dark {
    --background: 0 0% 0%;
    --foreground: 0 0% 100%;
    --card: 0 0% 0%;
    --card-foreground: 0 0% 100%;
    --primary: 0 0% 100%;
    --primary-foreground: 0 0% 0%;
    --secondary: 0 0% 12%;
    --secondary-foreground: 0 0% 100%;
    --muted: 0 0% 12%;
    --muted-foreground: 0 0% 65%;
    --accent: 0 0% 100%;
    --accent-foreground: 0 0% 0%;
    --border: 0 0% 20%;
    --input: 0 0% 15%;
    --ring: 0 0% 100%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* ================================
   Utilities (Glass + Grid + Animations)
================================ */
@layer utilities {
  /* Base App Background */
  .app-bg {
    background: hsl(0 0% 0%);
  }

  /* Static Grid */
  .bg-grid-lines {
    background-image: linear-gradient(
        to right,
        hsl(0 0% 100% / 0.08) 1px,
        transparent 1px
      ),
      linear-gradient(to bottom, hsl(0 0% 100% / 0.08) 1px, transparent 1px);
    background-size: 40px 40px;
  }

  /* Animated Grid */
  .bg-animated-grid {
    background-image: linear-gradient(
        transparent 96%,
        rgba(255, 255, 255, 0.12) 100%
      ),
      linear-gradient(90deg, transparent 96%, rgba(255, 255, 255, 0.12) 100%);
    background-size: 60px 60px;
    animation: gridMove 20s linear infinite;
  }

  /* ðŸŒŒ Starfield Background */
  .bg-starfield {
    background-image: radial-gradient(
      circle,
      rgba(255, 255, 255, 0.25) 1px,
      transparent 1px
    );
    background-size: 40px 40px;
    animation: starDrift 60s linear infinite, twinkle 6s ease-in-out infinite;
  }

  /* Glass Card */
  .glass-card {
    background: hsl(0 0% 100% / 0.05);
    backdrop-filter: blur(20px);
    border-radius: var(--radius);
    border: 1px solid hsl(0 0% 100% / 0.15);
    box-shadow: var(--shadow-card);
  }

  /* Glass Input */
  .glass-input {
    background: hsl(0 0% 100% / 0.06);
    color: hsl(0 0% 100%);
    border: 1px solid hsl(0 0% 100% / 0.2);
    border-radius: var(--radius);
    padding: 0.5rem 0.75rem;
    backdrop-filter: blur(10px);
    transition: var(--transition-smooth);
  }
  .glass-input::placeholder {
    color: hsl(0 0% 100% / 0.5);
  }
  .glass-input:focus {
    border-color: hsl(0 0% 100% / 0.4);
    box-shadow: 0 0 15px hsl(0 0% 100% / 0.15);
    outline: none;
  }

  /* Glass Button */
  .glass-button {
    background: hsl(0 0% 100% / 0.08);
    backdrop-filter: blur(12px);
    border: 1px solid hsl(0 0% 100% / 0.2);
    border-radius: var(--radius);
    transition: var(--transition-smooth);
  }
  .glass-button:hover {
    background: hsl(0 0% 100% / 0.15);
    box-shadow: 0 0 20px hsl(0 0% 100% / 0.2);
  }

  /* Glow Hover */
  .hover-glow:hover {
    box-shadow: 0 0 25px hsl(0 0% 100% / 0.25);
    border-color: hsl(0 0% 100% / 0.3);
  }

  /* ====================
     Animations
  ==================== */
  @keyframes gridMove {
    from {
      background-position: 0 0;
    }
    to {
      background-position: 60px 60px;
    }
  }

  @keyframes starDrift {
    from {
      background-position: 0 0;
    }
    to {
      background-position: 1000px 1000px;
    }
  }

  @keyframes twinkle {
    0%, 100% {
      opacity: 0.3;
    }
    50% {
      opacity: 0.8;
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-12px);
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes pulseGlow {
    0%, 100% {
      box-shadow: 0 0 20px rgba(255, 255, 255, 0.15);
    }
    50% {
      box-shadow: 0 0 40px rgba(255, 255, 255, 0.4);
    }
  }

  /* ðŸŒŸ Marquee Animation */
  @keyframes marquee {
    0% { transform: translateX(0%); }
    100% { transform: translateX(-50%); }
  }

  .animate-marquee {
    display: inline-flex;
    animation: marquee 30s linear infinite;
  }

  /* Utility Classes */
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  .animate-fadeIn {
    animation: fadeIn 1.2s ease-out forwards;
  }
  .animate-pulse-glow {
    animation: pulseGlow 3s ease-in-out infinite;
  }
}
